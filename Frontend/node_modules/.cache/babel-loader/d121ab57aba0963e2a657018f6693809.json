{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\source\\\\repos\\\\WeatherData\\\\Frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [display, setDisplay] = useState([]);\n  const [city, setCity] = useState([]);\n  const [countryCode, setCountryCode] = useState([]);\n\n  function fetchRequest() {\n    fetch(`https://localhost:44396/weatherforecast/forecast?city=${city}&countryCode=${countryCode}`, {\n      headers: {\n        ClientId: \"Bob\",\n        \"content-type\": \"application/json\"\n      }\n    }).then(function (response) {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      if (response.status === 429) {\n        debugger;\n        console.log(response.headers[\"retry-after\"]);\n        return \"Rate Limit Reached\";\n      }\n    }).then(response => {\n      setDisplay(response);\n    }).catch(error => setDisplay(\"An error has occured.\"));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Country Code (ISO-3661-2 Format):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: countryCode,\n        onChange: e => setCountryCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"City:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: city,\n        onChange: e => setCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: fetchRequest,\n      children: [\" \", \"Submit\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: display\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+senRSmbFLN7XpU7POb8YiZD/+I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/alber/source/repos/WeatherData/Frontend/src/App.js"],"names":["React","useState","App","display","setDisplay","city","setCity","countryCode","setCountryCode","fetchRequest","fetch","headers","ClientId","then","response","status","json","console","log","catch","error","e","target","value"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;;AAEA,WAASQ,YAAT,GAAwB;AACtBC,IAAAA,KAAK,CACF,yDAAwDL,IAAK,gBAAeE,WAAY,EADtF,EAEH;AACEI,MAAAA,OAAO,EAAE;AACPC,QAAAA,QAAQ,EAAE,KADH;AAEP,wBAAgB;AAFT;AADX,KAFG,CAAL,CASGC,IATH,CASQ,UAAUC,QAAV,EAAoB;AACxB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,UAAIF,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACH,OAAT,CAAiB,aAAjB,CAAZ;AACA,eAAO,oBAAP;AACD;AACF,KAlBH,EAmBGE,IAnBH,CAmBSC,QAAD,IAAc;AAClBV,MAAAA,UAAU,CAACU,QAAD,CAAV;AACD,KArBH,EAsBGK,KAtBH,CAsBUC,KAAD,IAAWhB,UAAU,CAAC,uBAAD,CAtB9B;AAuBD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,mEAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEG,WAFT;AAGE,QAAA,QAAQ,EAAGc,CAAD,IAAOb,cAAc,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAHjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,uCAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAElB,IAFT;AAGE,QAAA,QAAQ,EAAGgB,CAAD,IAAOf,OAAO,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAmBE;AAAA;AAAA;AAAA;AAAA,YAnBF,eAoBE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEd,YAApC;AAAA,iBACG,GADH,YAES,GAFT;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,eAwBE;AAAA,6BACE;AAAA,kBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GA7DQD,G;;KAAAA,G;AA+DT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [display, setDisplay] = useState([]);\n  const [city, setCity] = useState([]);\n  const [countryCode, setCountryCode] = useState([]);\n\n  function fetchRequest() {\n    fetch(\n      `https://localhost:44396/weatherforecast/forecast?city=${city}&countryCode=${countryCode}`,\n      {\n        headers: {\n          ClientId: \"Bob\",\n          \"content-type\": \"application/json\",\n        },\n      }\n    )\n      .then(function (response) {\n        if (response.status === 200) {\n          return response.json();\n        }\n        if (response.status === 429) {\n          debugger;\n          console.log(response.headers[\"retry-after\"])\n          return \"Rate Limit Reached\";\n        }\n      })\n      .then((response) => {\n        setDisplay(response);\n      })\n      .catch((error) => setDisplay(\"An error has occured.\"));\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Weather Forecast</h1>\n      <label>\n        Country Code (ISO-3661-2 Format):\n        <input\n          type=\"text\"\n          value={countryCode}\n          onChange={(e) => setCountryCode(e.target.value)}\n        />\n      </label>\n      <br />\n      <label>\n        City:\n        <input\n          type=\"text\"\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n        />\n      </label>\n      <br />\n      <button className=\"button\" onClick={fetchRequest}>\n        {\" \"}\n        Submit{\" \"}\n      </button>\n      <div>\n        <h2>{display}</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}