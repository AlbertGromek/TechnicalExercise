{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\source\\\\repos\\\\WeatherData\\\\Frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [forecast, setForecast] = useState([]);\n  const [city, setCity] = useState([]);\n  const [countryCode, setCountryCode] = useState([]);\n  const [errorMessage, setErrorMessage] = useState([]);\n\n  function fetchRequest() {\n    console.log(city);\n    console.log(countryCode);\n    fetch(`https://localhost:44396/weatherforecast/forecast?city=${city}&countryCode=${countryCode}`, {\n      headers: {\n        ClientId: \"Bob\",\n        \"content-type\": \"application/json\"\n      }\n    }).then(function (response) {\n      debugger;\n\n      if (!response.ok) {\n        setForecast(\"Error occured\");\n      }\n    }).then(res => res.json()).then(response => {\n      setForecast(response);\n    }).catch(error => {\n      setErrorMessage(error.message);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Weather Forecast \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Country Code(ISO - 3661 - 2 Format):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: countryCode,\n        onChange: e => setCountryCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"City:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: city,\n        onChange: e => setCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\" \", errorMessage, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: fetchRequest,\n      children: [\" \", \"Submit\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", forecast, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VUtQcAT5bnr33TX3W3LUPgCNh9Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/alber/source/repos/WeatherData/Frontend/src/App.js"],"names":["React","useState","App","forecast","setForecast","city","setCity","countryCode","setCountryCode","errorMessage","setErrorMessage","fetchRequest","console","log","fetch","headers","ClientId","then","response","ok","res","json","catch","error","message","e","target","value"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;;AAEA,WAASU,YAAT,GAAwB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACAO,IAAAA,KAAK,CACF,yDAAwDT,IAAK,gBAAeE,WAAY,EADtF,EAEH;AACEQ,MAAAA,OAAO,EAAE;AACPC,QAAAA,QAAQ,EAAE,KADH;AAEP,wBAAgB;AAFT;AADX,KAFG,CAAL,CASGC,IATH,CASQ,UAAUC,QAAV,EAAoB;AACxB;;AACA,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChBf,QAAAA,WAAW,CAAC,eAAD,CAAX;AACD;AACF,KAdH,EAeGa,IAfH,CAeSG,GAAD,IAASA,GAAG,CAACC,IAAJ,EAfjB,EAgBGJ,IAhBH,CAgBSC,QAAD,IAAc;AAClBd,MAAAA,WAAW,CAACc,QAAD,CAAX;AACD,KAlBH,EAmBGI,KAnBH,CAmBUC,KAAD,IAAW;AAChBb,MAAAA,eAAe,CAACa,KAAK,CAACC,OAAP,CAAf;AACD,KArBH;AAsBD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAC8B,GAD9B,eAEE;AAAA,sEAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEjB,WAFT;AAGE,QAAA,QAAQ,EAAGkB,CAAD,IAAOjB,cAAc,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AAHjC;AAAA;AAAA;AAAA;AAAA,cAFF,EAMK,GANL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EASW,GATX,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,uCAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEtB,IAFT;AAGE,QAAA,QAAQ,EAAGoB,CAAD,IAAOnB,OAAO,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,cAFF,EAMK,GANL;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,EAkBW,GAlBX,eAmBE;AAAA;AAAA;AAAA;AAAA,YAnBF,eAoBE;AAAA,sBAASlB,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,EAoBkC,GApBlC,eAqBE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEE,YAApC;AAAA,iBACG,GADH,YAES,GAFT;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,EAwBY,GAxBZ,eAyBE;AAAA,8BACE;AAAA,wBAAMR,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EACwB,GADxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF,EA2BS,GA3BT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAhEQD,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [forecast, setForecast] = useState([]);\n  const [city, setCity] = useState([]);\n  const [countryCode, setCountryCode] = useState([]);\n  const [errorMessage, setErrorMessage] = useState([]);\n\n  function fetchRequest() {\n    console.log(city);\n    console.log(countryCode);\n    fetch(\n      `https://localhost:44396/weatherforecast/forecast?city=${city}&countryCode=${countryCode}`,\n      {\n        headers: {\n          ClientId: \"Bob\",\n          \"content-type\": \"application/json\",\n        },\n      }\n    )\n      .then(function (response) {\n        debugger;\n        if (!response.ok) {\n          setForecast(\"Error occured\");\n        }\n      })\n      .then((res) => res.json())\n      .then((response) => {\n        setForecast(response);\n      })\n      .catch((error) => {\n        setErrorMessage(error.message);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <h1> Weather Forecast </h1>{\" \"}\n      <label>\n        Country Code(ISO - 3661 - 2 Format):\n        <input\n          type=\"text\"\n          value={countryCode}\n          onChange={(e) => setCountryCode(e.target.value)}\n        />{\" \"}\n      </label>{\" \"}\n      <br />\n      <label>\n        City:\n        <input\n          type=\"text\"\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n        />{\" \"}\n      </label>{\" \"}\n      <br />\n      <label> {errorMessage} </label>{\" \"}\n      <button className=\"button\" onClick={fetchRequest}>\n        {\" \"}\n        Submit{\" \"}\n      </button>{\" \"}\n      <div>\n        <h2> {forecast} </h2>{\" \"}\n      </div>{\" \"}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}