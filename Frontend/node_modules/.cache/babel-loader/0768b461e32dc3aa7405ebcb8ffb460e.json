{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\source\\\\repos\\\\WeatherData\\\\Frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { getForecast } from './services/weather-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [forecast, setForecast] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    getForecast().then(item => {\n      if (mounted) {\n        setForecast(item.weather.description);\n        console.log(item.weather.description);\n      }\n    });\n    return () => mounted = false;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: forecast.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ydn6hUZqbmyQnL7JGFANHgW/va4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/alber/source/repos/WeatherData/Frontend/src/App.js"],"names":["React","useEffect","useState","getForecast","App","forecast","setForecast","mounted","then","item","weather","description","console","log","value"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,4BAA5B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,OAAO,GAAG,IAAd;AACAJ,IAAAA,WAAW,GACRK,IADH,CACQC,IAAI,IAAI;AACZ,UAAIF,OAAJ,EAAa;AACXD,QAAAA,WAAW,CAACG,IAAI,CAACC,OAAL,CAAaC,WAAd,CAAX;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACC,OAAL,CAAaC,WAAzB;AACD;AACF,KANH;AAOA,WAAO,MAAMJ,OAAO,GAAG,KAAvB;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGF,QAAQ,CAACS;AADZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAxBQV,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { getForecast } from './services/weather-service';\n\nfunction App() {\n\n  const [forecast, setForecast] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n    getForecast()\n      .then(item => {\n        if (mounted) {\n          setForecast(item.weather.description);\n          console.log(item.weather.description);\n        }\n      })\n    return () => mounted = false;\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h1>Weather Forecast</h1>\n      <div>\n        {forecast.value}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}