{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\source\\\\repos\\\\WeatherData\\\\Frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { getForecast } from './services/weather-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [forecast, setForecast] = useState([]);\n  useEffect(() => {\n    fetch('https://localhost:44396/weatherforecast/forecast?city=zambrow&countryCode=pl', {\n      headers: {\n        'ClientId': 'Bob',\n        'content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(response => {\n      setForecast(response);\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ydn6hUZqbmyQnL7JGFANHgW/va4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/alber/source/repos/WeatherData/Frontend/src/App.js"],"names":["React","useEffect","useState","getForecast","App","forecast","setForecast","fetch","headers","then","res","json","response","catch","error","console","log"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,4BAA5B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAAC,8EAAD,EAAiF;AAAEC,MAAAA,OAAO,EAAE;AAC/F,oBAAY,KADmF;AAE/F,wBAAgB;AAF+E;AAAX,KAAjF,CAAL,CAIGC,IAJH,CAIQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJf,EAKGF,IALH,CAKQG,QAAQ,IAAI;AAChBN,MAAAA,WAAW,CAACM,QAAD,CAAX;AACD,KAPH,EAQGC,KARH,CAQSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARlB;AASD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGT;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAxBQD,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { getForecast } from './services/weather-service';\n\nfunction App() {\n\n  const [forecast, setForecast] = useState([]);\n\n  useEffect(() => {\n    fetch('https://localhost:44396/weatherforecast/forecast?city=zambrow&countryCode=pl', { headers: {\n      'ClientId': 'Bob',\n      'content-type': 'application/json'\n    }})\n      .then(res => res.json())\n      .then(response => {\n        setForecast(response);\n      })\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Weather Forecast</h1>\n      <div>\n        {forecast}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}